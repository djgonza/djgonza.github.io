import { Entity } from "../../infrastructure";
import { MapPoint } from "./map-points/map-point";
import { IDeck } from "../deck";
export declare class GameMap extends Entity {
    private _numberOfPotencialPoints;
    private _numberOfLevels;
    private _numberOfPaths;
    private _minLevelBossPoints;
    private _minNumberOfBossPoints;
    private _maxNumberOfBossPoints;
    private _minLevelRestPoints;
    private _minNumberOfRestPoints;
    private _maxNumberOfRestPoints;
    private _minLevelShopPoints;
    private _minNumberOfShopPoints;
    private _maxNumberOfShopPoints;
    private _levels;
    get levels(): MapPoint[][];
    get points(): MapPoint[];
    private _currentPoint;
    get currentPoint(): MapPoint | undefined;
    get currentLevel(): number | undefined;
    private constructor();
    static create(): GameMap;
    isPointAccessible(point: MapPoint): boolean;
    moveToPoint(point: MapPoint): void;
    generateIsometricMap(deck: IDeck): void;
    private getPointParents;
    private selectThreeInitialPoints;
    private generateIsometricMapPath;
    private getPossibleChildrens;
    private clearConexionsWithoutChildrens;
    private clearPointsWithoutChildrens;
    private assignTypeToPoints;
    private hideRandomPoints;
    private removeEmptyColumns;
    private generateRandomNumberBetween;
    private randomizeArray;
}
